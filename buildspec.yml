version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "üîß Installing dependencies..."
      - pip install --upgrade pip
      - which zip || (command -v yum && yum install -y zip) || (command -v apt-get && apt-get update && apt-get install -y zip)

  build:
    commands:
      - echo "üì¶ Zipping Lambda functions..."
      - zip -j RegisterUser.zip lambda_functions/RegisterUser/register_user.py
      - zip -j LoginUser.zip lambda_functions/LoginUser/login_user.py
      - zip -j GetUserPreferences.zip lambda_functions/GetUserPreferences/get_user_prefs.py
      - zip -j UpdateUserPreferences.zip lambda_functions/UpdateUserPreferences/update_user_prefs.py
      - zip -j GetWeatherByLocation.zip lambda_functions/GetWeatherByLocation/get_weather.py

      - echo "üåç Uploading frontend to S3..."
      - aws s3 sync frontend/ s3://weather-frontend-app/ --delete || echo "‚ö†Ô∏è S3 sync failed ‚Äî check bucket name or permissions"

  post_build:
    commands:
      - echo "üöÄ Creating or updating Lambda functions..."
      - |
        REGION="eu-north-1"
        LAMBDA_ROLE_ARN="arn:aws:iam::746669220952:role/LambdaBasicExecutionRole"

        declare -A FUNCTIONS=(
          [RegisterUser]="RegisterUser.zip register_user.lambda_handler"
          [LoginUser]="LoginUser.zip login_user.lambda_handler"
          [GetUserPreferences]="GetUserPreferences.zip get_user_prefs.lambda_handler"
          [UpdateUserPreferences]="UpdateUserPreferences.zip update_user_prefs.lambda_handler"
          [GetWeatherByLocation]="GetWeatherByLocation.zip get_weather.lambda_handler"
        )

        for name in "${!FUNCTIONS[@]}"; do
          IFS=' ' read -r zip_file handler <<< "${FUNCTIONS[$name]}"
          echo "‚Üí Deploying $name..."

          if aws lambda get-function --function-name "$name" --region "$REGION" >/dev/null 2>&1; then
            echo "‚úÖ Updating $name"
            aws lambda update-function-code \
              --function-name "$name" \
              --zip-file "fileb://${zip_file}" \
              --region "$REGION"
          else
            echo "üÜï Creating $name"
            aws lambda create-function \
              --function-name "$name" \
              --runtime python3.11 \
              --role "$LAMBDA_ROLE_ARN" \
              --handler "$handler" \
              --zip-file "fileb://${zip_file}" \
              --region "$REGION"
          fi
        done

artifacts:
  files:
    - '*.zip'
